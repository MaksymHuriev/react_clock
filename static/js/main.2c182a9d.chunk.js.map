{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toUTCString","slice","timer","this","window","setInterval","setState","prevProps","prevState","name","props","console","debug","info","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","clockName","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"6MAWaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,cAAcC,OAAO,IAAK,IAF/C,EAKEC,MAAQ,EALV,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,MAAQE,OAAOC,aAAY,WAC9B,EAAKC,SAAS,CACZR,MAAM,IAAIC,MAAOC,cAAcC,OAAO,IAAK,OAE5C,OAZP,gCAeE,SAAmBM,EAAkBC,GAC/BD,EAAUE,OAASN,KAAKO,MAAMD,MAChCE,QAAQC,MAAR,uBAA8BL,EAAUE,KAAxC,eAAmDN,KAAKO,MAAMD,OAG5DD,EAAUV,OAASK,KAAKN,MAAMC,MAChCa,QAAQE,KAAKV,KAAKN,MAAMC,QArB9B,kCAyBE,WACEgB,cAAcX,KAAKD,SA1BvB,oBA6BE,WACE,OACE,sBAAKa,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGZ,KAAKO,MAAMD,OAGb,YAED,sBAAMM,UAAU,cAAhB,SACGZ,KAAKN,MAAMC,cAvCtB,GAA2BkB,aCP3B,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWnB,OAAO,GAE3C,MAAM,SAAN,OAAgBiB,GAQX,IAAMG,EAAb,4MACExB,MAAQ,CACNyB,UAAU,EACVC,UAAW,WAHf,EAMErB,MAAQ,EANV,uDAQE,WAAqB,IAAD,OAClBsB,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKrB,SAAS,CAAEgB,UAAU,OAG5BE,SAASC,iBAAiB,SAAS,WACjC,EAAKnB,SAAS,CAAEgB,UAAU,OAG5BnB,KAAKD,MAAQE,OAAOC,aAAY,WAC9B,EAAKC,SAAS,CAAEiB,UAAWN,QAC1B,QApBP,kCAuBE,WACEH,cAAcX,KAAKD,SAxBvB,oBA2BE,WACE,OACE,sBAAKa,UAAU,MAAf,UACE,6CACCZ,KAAKN,MAAMyB,UAAY,cAAC,EAAD,CAAOb,KAAMN,KAAKN,MAAM0B,mBA/BxD,GAAyBP,aCZzBY,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.2c182a9d.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport { Component } from 'react';\n\nexport interface Props {\n  name: string;\n}\n\nexport interface State {\n  time: string;\n}\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    time: new Date().toUTCString().slice(-12, -4),\n  };\n\n  timer = 0;\n\n  componentDidMount() {\n    this.timer = window.setInterval(() => {\n      this.setState({\n        time: new Date().toUTCString().slice(-12, -4),\n      });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (prevProps.name !== this.props.name) {\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n\n    if (prevState.time !== this.state.time) {\n      console.info(this.state.time);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.time}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ninterface State {\n  hasClock: boolean;\n  clockName: string;\n}\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timer = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    this.timer = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.hasClock && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}